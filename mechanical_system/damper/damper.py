from mechanical_system.damper.model import DamperConstant
from utils.utils import fetch_key_from_dictionary

DAMPER_DICT = {
    'constant': DamperConstant
}


def get_damper_model(damper_dict, damper_key):
    return fetch_key_from_dictionary(damper_dict, damper_key, "The damper is not defined!")


class Damper(object):
    """
    The Damper class
    """

    def __init__(self, model, model_kwargs):
        """
        Initialization
        :param model: The model name as a string. Currently supported: 'constant'
        :param model_kwargs: The model kwargs as a dictionary {parameter_key : value}
        """
        self._set_model(model, model_kwargs)
        self._model_kwargs = model_kwargs

    def _set_model(self, model, model_kwargs):
        """
        Initializes and sets the damper model.
        :param model: The model name as a string.
        :param model_kwargs: The model kwargs as a dictionary
        """
        self.model = get_damper_model(DAMPER_DICT, model)
        self.model = self.model(**model_kwargs)

    def get_force(self, velocity):
        """
        Return the force generated by the damper
        :param velocity: The velocity of the object attached to the damper
        :return: The force generated by the damper in Newtons
        """
        return self.model.get_force(velocity)
